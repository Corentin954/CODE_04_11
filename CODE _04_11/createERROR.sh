#
# The "histograms" style automates the construction of barcharts with
# various stacking and clustering options.  But it doesn't offer much
# choice for coloring.
#
# This demo show using the "with boxes" plot style to generate clustered
# histograms with individual box coloring generated by a user-provided function.
# This could, for example, depend on data from other columns in the input.
#

#!/bin/bash
declare -i i
declare -a liste_name
declare -i nsimu

# On lit le fichier avec les parametres de la simulation
i="-3"
while read line
do
     if [[ $i -eq -3 ]]; then TITLE=${line};      fi
     if [[ $i -eq -2 ]]; then tst=${line};   fi
     if [[ $i -eq -1 ]]; then      nsimu=${line};      fi
     if [[ -1 -lt $i ]]; then liste_name[i]=${line};   fi
  (( i=${i}+1 ));
done < param_sim.txt

#printf "TITLE=${TITLE}\n"
#printf "tst=${tst}\n"
#printf "nsimu=${nsimu}\n"
#declare -p liste_name


rho="2"; tau="3"; e="4"; e_interne="5"; P="6"; T="7"; C="8"; S="9"; G="10"; BETA="11"; GAMMA="12"; LIQ="13";
declare -ra liste_plot=(rho tau e e_interne P T C S G beta gamma liq)
declare -ra liste_plot_name=("Densité (kg/m)" "Volume spécifique (m/kg)" "Energie totale (J/kg)" "Energie interne (J/kg)" "Pression (Pa)" "Temperature (K)" "Celerite du son (m/s)" "Entropie" "Dérivée fondamentale" "Fraction massique beta" "Fraction massique gamma" "Fraction massique liquide")
declare -i nplot=${#liste_plot[@]}



## --------------   PLOT erreur bar de toutes les variables comparées -----------------------------------------------------------
name_fich="fichiers/GNUPLOT/erreur.plot"
cat <<EOF > $name_fich
  set term x11 font "Arial,20"
  set title "${TITLE}"
  set grid
  red = "#FF0000"; green = "#00FF00"; blue = "#0000FF"; skyblue = "#87CEEB";
  set yrange [0:1]
  set style data histogram
  set style histogram cluster gap 1
  set style fill solid
  set boxwidth 0.9
  set grid ytics
  set xtics ('rho' 0, 'tau' 1, 'etot' 2, 'epsilon' 3, 'P' 4, 'T' 5, 'C' 6, 'S' 7, 'G' 8, 'beta' 9, 'gamma' 10, 'liq' 11 )
EOF
#  set xtics ('A' 0, 'B' 1, 'C' 2, 'D' 3)
 
echo -n plot >> $name_fich
for (( i=0 ; i<nsimu-1 ; i++ )) do
  echo -n " 'errEF${i}' using 2 title '${liste_name[i]}'," >> $name_fich
done
echo " 'errEF${i}' using 2 title '${liste_name[i]}'" >> $name_fich
###############################################################################################



#################################################################################################
## --------------   boucle PLOT sur les erreurs variables ABSOLUES  -----------------------------
for (( j=0 ; j<nplot ; j++ ))  # boucle sur les variables
do
  var=${liste_plot[j]}
  name_fich="fichiers/GNUPLOT/err_${var}_abs.plot"

  #echo $j $var $name_fich

cat <<EOF > $name_fich
  set term x11 font "Arial,20"
  set title "${liste_plot[j]} | Erreur absolue | ${TITLE}"
  set grid
  red = "#FF0000"; green = "#00FF00"; blue = "#0000FF"; skyblue = "#87CEEB";
  set style data histogram
  set style histogram cluster gap 1
  set style fill solid
  set boxwidth 0.9
  set grid ytics
  set xtics ('Etat Final abs' 0, 'Etat Choc abs' 1)
  set ylabel '${liste_phase_name[j]}'
EOF

  echo -n plot >> $name_fich
  for (( i=0 ; i<nsimu-1 ; i++ )) do
    echo -n " 'err_ligne_abs${i}' using ${!var} title '${liste_name[i]}'," >> $name_fich
  done
  echo " 'err_ligne_abs${i}' using ${!var} title '${liste_name[i]}'" >> $name_fich

done
###############################################################################################


#################################################################################################
## --------------   boucle PLOT sur les erreurs variables RELATIVES  -----------------------------
for (( j=0 ; j<nplot ; j++ ))  # boucle sur les variables
do
  var=${liste_plot[j]}
  name_fich="fichiers/GNUPLOT/err_${var}_rel.plot"

  #echo $j $var $name_fich

cat <<EOF > $name_fich
  set term x11 font "Arial,20"
  set title "${liste_plot[j]} | Erreur relative | ${TITLE}"
  set grid
  red = "#FF0000"; green = "#00FF00"; blue = "#0000FF"; skyblue = "#87CEEB";
  set style data histogram
  set style histogram cluster gap 1
  set style fill solid
  set boxwidth 0.9
  set grid ytics
  set xtics ('Etat Final rel' 0, 'Etat choc rel' 1)
  set ylabel '${liste_phase_name[j]}'
EOF

  echo -n plot >> $name_fich
  for (( i=0 ; i<nsimu-1 ; i++ )) do
    echo -n " 'err_ligne_rel${i}' using ${!var} title '${liste_name[i]}'," >> $name_fich
  done
  echo " 'err_ligne_rel${i}' using ${!var} title '${liste_name[i]}'" >> $name_fich

done

#************************#************************#************************#*******************
#************************* Generation des graphes **********************************************

cd fichiers/GNUPLOT
#gnuplot "rho.plot" -persist  # la fenetre n'est plus interactive !!?

gnuplot "erreur.plot" -persist;

# plot variable
for (( j=0 ; j<nplot ; j++ )) do
  gnuplot "err_${liste_plot[j]}_abs.plot" -persist
done

for (( j=0 ; j<nplot ; j++ )) do
  gnuplot "err_${liste_plot[j]}_rel.plot" -persist
done


